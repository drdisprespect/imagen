{"ast":null,"code":"var _jsxFileName = \"/Users/kongjiehao/image/frontend/src/ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatBot.css';\nimport chatIcon from './trump.png'; // Importing the image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Toggle chatbox open/close\n  const toggleChat = () => {\n    console.log('Toggling chatbox. Current state:', isOpen);\n    setIsOpen(prev => !prev);\n  };\n\n  // Handle sending message and receiving response from Gemini API\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const currentInput = input;\n    console.log('Sending message:', currentInput);\n\n    // Add user's message to chat immediately\n    const userMessage = {\n      sender: 'user',\n      text: currentInput\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8080/api/gemini', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt: currentInput\n        })\n      });\n      console.log('Fetch response status:', response.status);\n      const data = await response.json();\n      console.log('Response data:', data);\n      const aiMessage = {\n        sender: 'ai',\n        text: data.response\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (err) {\n      console.error('Error in sendMessage:', err);\n      const errorMessage = {\n        sender: 'ai',\n        text: 'Sorry, there was an error processing your request.'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Use onKeyDown to capture the Enter key\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"AI Assistant by Gemini\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleChat,\n          className: \"close-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox-body\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message ai\",\n          children: \"Typing...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbox-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: loading,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggle-button\",\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chatIcon,\n        alt: \"Chat Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"4DoytP21Jr486Y4VjG3vlt1O2gM=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","chatIcon","jsxDEV","_jsxDEV","ChatBot","_s","isOpen","setIsOpen","messages","setMessages","input","setInput","loading","setLoading","toggleChat","console","log","prev","sendMessage","trim","currentInput","userMessage","sender","text","response","fetch","method","headers","body","JSON","stringify","prompt","status","data","json","aiMessage","err","error","errorMessage","handleKeyDown","e","key","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","type","value","onChange","target","onKeyDown","placeholder","disabled","src","alt","_c","$RefreshReg$"],"sources":["/Users/kongjiehao/image/frontend/src/ChatBot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ChatBot.css';\nimport chatIcon from './trump.png'; // Importing the image\n\nconst ChatBot = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Toggle chatbox open/close\n  const toggleChat = () => {\n    console.log('Toggling chatbox. Current state:', isOpen);\n    setIsOpen((prev) => !prev);\n  };\n\n  // Handle sending message and receiving response from Gemini API\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const currentInput = input;\n    console.log('Sending message:', currentInput);\n\n    // Add user's message to chat immediately\n    const userMessage = { sender: 'user', text: currentInput };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput('');\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:8080/api/gemini', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ prompt: currentInput }),\n      });\n\n      console.log('Fetch response status:', response.status);\n      const data = await response.json();\n      console.log('Response data:', data);\n      const aiMessage = { sender: 'ai', text: data.response };\n      setMessages((prev) => [...prev, aiMessage]);\n    } catch (err) {\n      console.error('Error in sendMessage:', err);\n      const errorMessage = {\n        sender: 'ai',\n        text: 'Sorry, there was an error processing your request.',\n      };\n      setMessages((prev) => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Use onKeyDown to capture the Enter key\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      {isOpen ? (\n        <div className=\"chatbox\">\n          <div className=\"chatbox-header\">\n            <h4>AI Assistant by Gemini</h4>\n            <button onClick={toggleChat} className=\"close-button\">&times;</button>\n          </div>\n          <div className=\"chatbox-body\">\n            {messages.map((msg, index) => (\n              <div key={index} className={`message ${msg.sender}`}>\n                {msg.text}\n              </div>\n            ))}\n            {loading && <div className=\"message ai\">Typing...</div>}\n          </div>\n          <div className=\"chatbox-footer\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyDown={handleKeyDown}\n              placeholder=\"Type a message...\"\n            />\n            <button onClick={sendMessage} disabled={loading} className=\"send-button\">\n              Send\n            </button>\n          </div>\n        </div>\n      ) : (\n        <button className=\"chatbot-toggle-button\" onClick={toggleChat}>\n          <img src={chatIcon} alt=\"Chat Icon\" />\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}