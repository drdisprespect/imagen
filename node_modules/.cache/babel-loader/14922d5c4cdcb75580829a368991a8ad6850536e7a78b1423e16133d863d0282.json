{"ast":null,"code":"var _jsxFileName = \"/Users/kongjiehao/image-generator-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [model, setModel] = useState('model1');\n  const [progress, setProgress] = useState(0);\n  const [imageUrl, setImageUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setProgress(0);\n    setImageUrl('');\n    setLoading(true);\n\n    // Send POST request to the Golang backend\n    const response = await fetch('http://localhost:8080/generate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt,\n        model\n      })\n    });\n\n    // For this simple example, we simulate progress updates.\n    // In a real app, you might use polling or WebSockets.\n    let simulatedProgress = 0;\n    const progressInterval = setInterval(() => {\n      simulatedProgress += 10;\n      setProgress(simulatedProgress);\n      if (simulatedProgress >= 100) {\n        clearInterval(progressInterval);\n      }\n    }, 200);\n    const data = await response.json();\n    setImageUrl(data.imageUrl);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value),\n        placeholder: \"Enter your prompt\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: model,\n        onChange: e => setModel(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"model1\",\n          children: \"Asian Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"model2\",\n          children: \"Anime Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dalle\",\n          children: \"DALL\\xB7E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: \"Generate Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generated Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Generated\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1UnbGFV+HOOY2HhwbTrRhujxEvE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","model","setModel","progress","setProgress","imageUrl","setImageUrl","loading","setLoading","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","simulatedProgress","progressInterval","setInterval","clearInterval","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","max","src","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["/Users/kongjiehao/image-generator-app/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [prompt, setPrompt] = useState('');\n  const [model, setModel] = useState('model1');\n  const [progress, setProgress] = useState(0);\n  const [imageUrl, setImageUrl] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setProgress(0);\n    setImageUrl('');\n    setLoading(true);\n    \n    // Send POST request to the Golang backend\n    const response = await fetch('http://localhost:8080/generate', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ prompt, model }),\n    });\n    \n    // For this simple example, we simulate progress updates.\n    // In a real app, you might use polling or WebSockets.\n    let simulatedProgress = 0;\n    const progressInterval = setInterval(() => {\n      simulatedProgress += 10;\n      setProgress(simulatedProgress);\n      if (simulatedProgress >= 100) {\n        clearInterval(progressInterval);\n      }\n    }, 200);\n\n    const data = await response.json();\n    setImageUrl(data.imageUrl);\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Image Generator</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={prompt}\n          onChange={(e) => setPrompt(e.target.value)}\n          placeholder=\"Enter your prompt\"\n          required\n        />\n        <select value={model} onChange={(e) => setModel(e.target.value)}>\n          <option value=\"model1\">Asian Model</option>\n          <option value=\"model2\">Anime Model</option>\n          <option value=\"dalle\">DALLÂ·E</option>\n        </select>\n        <button type=\"submit\" disabled={loading}>\n          Generate Image\n        </button>\n      </form>\n      {loading && (\n        <div>\n          <progress value={progress} max=\"100\"></progress>\n          <p>{progress}%</p>\n        </div>\n      )}\n      {imageUrl && (\n        <div>\n          <h2>Generated Image:</h2>\n          <img src={imageUrl} alt=\"Generated\" style={{ maxWidth: '100%' }} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}